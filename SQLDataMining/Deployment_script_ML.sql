/*
Deployment script for ML

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DMA "DMA"
:setvar HUB "HUB"
:setvar master "master"
:setvar TOOL "TOOL"
:setvar msdb "msdb"
:setvar CORE "CORE"
:setvar DatabaseName "ML"
:setvar DefaultFilePrefix "ML"
:setvar DefaultDataPath "D:\SQL_Database\DWH\"
:setvar DefaultLogPath "E:\SQL_Log\DWH\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/* Ente permanent Scripts below */

/* Enter SQL Code for Sprint Release below*/

/* Sprint 75 */
/* SGE */
TRUNCATE TABLE [ADECT].[BFSN_PAYMENT]
TRUNCATE TABLE [ADECT].[RELN_PAYMENT]
TRUNCATE TABLE [ADECT].[TOTAL_PAYMENTS]



/*
/* Sprint 74 */
/* Sprint 73 */
/* Sprint 72 */
/* Sprint 71 */
/* Sprint 69 & 70 */
/* Sprint 68 */
/* Sprint 67 */
/* Sprint 66 */
/* Sprint 65 */
/* Sprint 64 */
/* Sprint 62 + 63 */
/* Sprint 61 */
/* Sprint 60 */
/* Sprint 59 */
/* Sprint 58 */
/* Sprint 57 */
/* Sprint 56 */
/* Sprint 55 */
/* Sprint 54 */
/* Sprint 53 */
/* Sprint 51 + 52 */
/* Sprint 50 */
/* Sprint 49 */
/* Sprint 48 */
/* Sprint 47 */
/* Sprint 46 */
/* Sprint 45 */
/* Sprint 44 */
/* Sprint 43 */
TRUNCATE TABLE MAP.Delta_Load_ONLN_V_CLV_Scores_Export
/* Sprint 42 */
/* Sprint 41 */
/* Sprint 40 */
/* Sprint 39 */
/* Sprint 38 */
/* Sprint 37*/
/* Sprint 36*/
/* Sprint 35*/
/* Sprint 34*/
/* Sprint 33*/
/* Sprint 32*/
/* Sprint 31*/
/* Sprint 30*/
/* Sprint 29*/
/* Sprint 28*/
*/
GO

GO
/*
The column [ADECT].[BFSN_PAYMENT].[Blocked_Vendor] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [ADECT].[BFSN_PAYMENT])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [ADECT].[RELN_PAYMENT].[Blocked_Vendor] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [ADECT].[RELN_PAYMENT])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [ADECT].[TOTAL_PAYMENTS].[Blocked_Vendor] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [ADECT].[TOTAL_PAYMENTS])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering Table [ADECT].[BFSN_PAYMENT]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT] DROP COLUMN [Blocked_Vendor];


GO
PRINT N'Altering Table [ADECT].[RELN_PAYMENT]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT] DROP COLUMN [Blocked_Vendor];


GO
PRINT N'Altering Table [ADECT].[TOTAL_PAYMENTS]...';


GO
ALTER TABLE [ADECT].[TOTAL_PAYMENTS] DROP COLUMN [Blocked_Vendor];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_BFSN_PAYMENT_Mandant]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT]
    ADD CONSTRAINT [DF_BFSN_PAYMENT_Mandant] DEFAULT ('unknown') FOR [Mandant];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_BFSN_PAYMENT_Review_Status]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT]
    ADD CONSTRAINT [DF_BFSN_PAYMENT_Review_Status] DEFAULT ('') FOR [Review_Status];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_BFSN_PAYMENT_Source_System]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT]
    ADD CONSTRAINT [DF_BFSN_PAYMENT_Source_System] DEFAULT ('unknown') FOR [Source_System];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_BFSN_PAYMENT_Vendor_Number_Name]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT]
    ADD CONSTRAINT [DF_BFSN_PAYMENT_Vendor_Number_Name] DEFAULT ('') FOR [Vendor_Number_Name];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_BFSN_PAYMENT_Year]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT]
    ADD CONSTRAINT [DF_BFSN_PAYMENT_Year] DEFAULT ((1900)) FOR [Year];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_BFSN_PAYMENT_Year-Month]...';


GO
ALTER TABLE [ADECT].[BFSN_PAYMENT]
    ADD CONSTRAINT [DF_BFSN_PAYMENT_Year-Month] DEFAULT ('1900-01') FOR [Year-Month];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_RELN_PAYMENT_Mandant]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT]
    ADD CONSTRAINT [DF_RELN_PAYMENT_Mandant] DEFAULT ('unknown') FOR [Mandant];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_RELN_PAYMENT_Review_Status]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT]
    ADD CONSTRAINT [DF_RELN_PAYMENT_Review_Status] DEFAULT ('') FOR [Review_Status];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_RELN_PAYMENT_Source_System]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT]
    ADD CONSTRAINT [DF_RELN_PAYMENT_Source_System] DEFAULT ('unknown') FOR [Source_System];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_RELN_PAYMENT_Vendor_Number_Name]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT]
    ADD CONSTRAINT [DF_RELN_PAYMENT_Vendor_Number_Name] DEFAULT ('') FOR [Vendor_Number_Name];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_RELN_PAYMENT_Year]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT]
    ADD CONSTRAINT [DF_RELN_PAYMENT_Year] DEFAULT ((1900)) FOR [Year];


GO
PRINT N'Creating Default Constraint [ADECT].[DF_RELN_PAYMENT_Year-Month]...';


GO
ALTER TABLE [ADECT].[RELN_PAYMENT]
    ADD CONSTRAINT [DF_RELN_PAYMENT_Year-Month] DEFAULT ('1900-01') FOR [Year-Month];


GO
PRINT N'Altering Procedure [ADECT].[S_BFSN_PAYMENT]...';


GO

ALTER PROCEDURE [ADECT].[S_BFSN_PAYMENT] AS BEGIN

TRUNCATE TABLE [ADECT].[BFSN_PAYMENT]

-- Payment Proposal, Payment Proposal Head, Payment Proposal Line, Vendor
INSERT INTO [ADECT].[BFSN_PAYMENT]
	(
	[Payment_Number]
      ,[Posting_Description_1]
      ,[Posting_Description_2]
      ,[Posting_Description_3]
      ,[Document_Number_external]
      ,[Document_Number_internal]
      --,[Contract_Number]
      ,[Gen_Jnl_Line_Number]
      ,[Line_Number]
      ,[ID_Vendor_Entry]
      ,[Object_Number]
      ,[Vendor_Number]
      ,[Name]
      ,[City]
      ,[Country_Region_Code]
      ,[Amount_Applied]
      ,[Amount_Initial]
      ,[Discount_Applied]
      ,[Discount_Allowed]
      ,[Discount_Rate]
      ,[Discount_Possible]
      --,[VAT_Rate]
      --,[VAT_Amount]
      ,[Payment_Method_Code]
      ,[Customer_Bank_Branch_Number]
      ,[Customer_Bank_Account_Number]
      ,[Customer_IBAN]
      ,[Vendor_Account_Holder]
      ,[Vendor_IBAN]
	  ,[Vendor_BIC]
      ,[Vendor_Bank_Account_Number]
      ,[Vendor_Bank_Branch_Number]
	  ,[Vendor_Bank_Origin]
      ,[Posting_Date]
      ,[Posting_Date_Changed]
      ,[Due_Date]
      ,[Last_Payment_Date]
      ,[Entry_Cancelled]
      ,[Jnl_Changed_By]
      ,[Jnl_Changed_On]
      --,[Blocked_Vendor]
      ,[Review_Status]
      ,[Created_By]
      ,[Vendor_Number_Name]
	  ,[Source_System]
      ,[Rownumber]
	  ,[Year]
      ,[Year-Month]
      ,[Mandant]
	)
SELECT
	pp.Journal_Batch_Name AS Payment_Number,
	pl.Payment_Text AS Posting_Description_1,
	pl.Payment_Description AS Posting_Description_2,
	'' AS Posting_Description_3,
	ISNULL(pl.External_Document_Number, 'unknown') AS Document_Number_external,
	ISNULL(pl.Applies_To_Doc_Number, 'unknown') AS Document_Number_internal,
	--'' AS Contract_Number,
	ph.Gen_Journal_Line AS Gen_Jnl_Line_Number,
	pl.Line_Number AS Line_Number,
	pl.ID_Applied_Entry AS ID_Vendor_Entry,
	'11005' AS Object_Number,
	ph.Account_Number AS Vendor_Number,
	ph.Name AS Name,
	ph.City AS City,
	ph.Country_Region_Code AS Country_Region_Code,
	pl.Posting_Applied_Amount AS Amount_Applied,
	pl.Original_Amount AS Amount_Initial,
	pl.Posting_Payment_Discount AS Discount_Applied,
	pl.Payment_Discount_Allowed AS Discount_Allowed,
	pl.Original_Pmt_Discount AS Discount_Rate,
	pl.Payment_Discount_Possible AS Discount_Possible,
	--0 AS VAT_Rate,
	--0 AS VAT_Amount,
	ph.Orig_Payment_Method AS Payment_Method_Code,
	ph.Orderer_Bank_Branch_Number AS Customer_Bank_Branch_Number,
	ph.Orderer_Bank_Account_Number AS Customer_Bank_Account_Number,
	ph.Orderer_Bank_IBAN_Code AS Customer_IBAN,
	ph.Bank_Account_Owner AS Vendor_Account_Holder,
	ph.Bank_IBAN_Code AS Vendor_IBAN,
	ph.Bank_BIC_Code AS Vendor_BIC,
	ph.Bank_Account_Number AS Vendor_Bank_Account_Number,
	ph.Bank_Branch_Number AS Vendor_Bank_Branch_Number,
	LEFT(ph.Bank_IBAN_Code,2) AS Vendor_Bank_Origin,
	pp.Posting_Date AS Posting_Date,
	0 AS Posting_Date_Changed,
	pl.Due_Date AS Due_Date,
	'1900-01-01' AS Last_Payment_Date,
	CASE	WHEN pp.Description LIKE ('Gelöschter Zahlungslauf') THEN 1
			WHEN pp.Description NOT LIKE ('Gelöschter Zahlungslauf') THEN 0
			ELSE 'unknown' END AS Entry_Cancelled,
	'' AS Jnl_Changed_By,
	'1900-01-01' AS Jnl_Changed_On,
	--ISNULL(ven.Blocked,999) AS Blocked_Vendor,
	CASE	WHEN pp.Posting_Date >= DATEADD(day, -7, GETDATE())  THEN 'Proposal'
			ELSE 'Booked' END AS Review_Status,																	--need a rule (still to be decided)
	pp.User_ID AS Created_By,
	ISNULL(ven.Vendor_Number + ' ' + ven.Vendor_Name, '') AS Vendor_Number_Name,
	'BFSN' AS Source_System,
	ROW_NUMBER() OVER (PARTITION BY ph.Account_Number ORDER BY ph.Account_Number) AS Rownumber,
	YEAR(ISNULL(ph.Posting_Date,'1900-01-01')) AS [Year],
	CONVERT(NVARCHAR(7), ISNULL(ph.Posting_Date,'1900-01-01'), 126) AS [Year-Month],
	'03_OUTLETCITY_Online' AS Mandant

FROM [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal] pp
		LEFT JOIN [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal_Head] ph ON pp.Journal_Batch_Name = ph.Gen_Journal_Batch
		LEFT JOIN [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal_Line] pl ON ph.Gen_Journal_Batch = pl.Journal_Batch_Name AND ph.Gen_Journal_Line = pl.Journal_Line_Number
		LEFT JOIN [ADECT].[RELN_BFSN_Vendor] ven ON ven.Source_System = 'BFSN' AND ven.Vendor_Number = pl.Source_Number
WHERE pl.Account_Type = 2 AND pp.Posting_Date >= '2016-01-01'

END
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Check how many observations are in the respective columns (after JOIN)
SELECT
	COUNT(*)
FROM [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal_Head] ph -- 219.109
	 LEFT JOIN [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal] pp ON pp.Journal_Batch_Name = ph.Gen_Journal_Batch -- 219.109
	 

SELECT
	COUNT(*)
FROM [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal_Line] pl
	LEFT JOIN [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal_Head] ph ON ph.Gen_Journal_Batch = pl.Journal_Batch_Name AND ph.Gen_Journal_Line = pl.Journal_Line_Number
	LEFT JOIN [HUB].[PAPO].[BFSN_Outletcity_Metzingen_GmbH_Payment_Proposal] pp ON pp.Journal_Batch_Name = ph.Gen_Journal_Batch
	LEFT JOIN [ADECT].[RELN_BFSN_Vendor] ven ON ven.Source_System = 'BFSN' AND ven.Vendor_Number = pl.Account_Number
WHERE pl.Account_Type = 2 --39.262
GO
PRINT N'Altering Procedure [ADECT].[S_TOTAL_PAYMENTS]...';


GO

ALTER PROCEDURE [ADECT].[S_TOTAL_PAYMENTS] AS BEGIN

TRUNCATE TABLE [ADECT].[TOTAL_PAYMENTS] 

--RELN_PAYMENT, BFSN_PAYMENT
INSERT INTO [ADECT].[TOTAL_PAYMENTS]
(
	[Payment_Number]
	,[Posting_Description_1]
    ,[Posting_Description_2]
    ,[Posting_Description_3]
    ,[Document_Number_external]
    ,[Document_Number_internal]
    --,[Contract_Number] --> exclude from consideration, since there is no contract number for any (accounts payable) vendor
    ,[Gen_Jnl_Line_Number]
    ,[Line_Number]
    ,[ID_Vendor_Entry]
    ,[Object_Number]
    ,[Vendor_Number]
    ,[Name]
    ,[City]
    ,[Country_Region_Code]
    ,[Amount_Applied]
    ,[Amount_Initial]
    ,[Discount_Applied]
    ,[Discount_Allowed]
    ,[Discount_Rate]
    ,[Discount_Possible]
    --,[VAT_Rate]
    --,[VAT_Amount]
    ,[Payment_Method_Code]
    ,[Customer_Bank_Branch_Number]
    ,[Customer_Bank_Account_Number]
    ,[Customer_IBAN]
    ,[Vendor_Account_Holder]
    ,[Vendor_IBAN]
	,[Vendor_BIC]
    ,[Vendor_Bank_Account_Number]
    ,[Vendor_Bank_Branch_Number]
	,[Vendor_Bank_Origin]
    ,[Posting_Date]
    ,[Posting_Date_Changed]
    ,[Due_Date]
    ,[Last_Payment_Date]
    ,[Entry_Cancelled]
    ,[Jnl_Changed_By]
    ,[Jnl_Changed_On]
    --,[Blocked_Vendor]
    ,[Review_Status]
    ,[Created_By]
    ,[Vendor_Number_Name]
    ,[Source_System]
    ,[Rownumber]
    ,[Year]
    ,[Year-Month]
    ,[Mandant]
	)
SELECT
	reln.Payment_Number 
    ,reln.Posting_Description_1
    ,reln.Posting_Description_2
    ,reln.Posting_Description_3
    ,reln.Document_Number_external
    ,reln.Document_Number_internal
    --,reln.Contract_Number --> exclude from consideration, since there is no contract number for any (accounts payable) vendor
    ,reln.Gen_Jnl_Line_Number
    ,reln.Line_Number
    ,reln.ID_Vendor_Entry
    ,reln.Object_Number
    ,reln.Vendor_Number
    ,reln.[Name]
    ,reln.City
    ,reln.Country_Region_Code
    ,reln.Amount_Applied
    ,reln.Amount_Initial
    ,reln.Discount_Applied
    ,reln.Discount_Allowed
    ,reln.Discount_Rate
    ,reln.Discount_Possible
    --,reln.VAT_Rate
    --,reln.VAT_Amount
    ,reln.Payment_Method_Code
    ,reln.Customer_Bank_Branch_Number
    ,reln.Customer_Bank_Account_Number
    ,reln.Customer_IBAN
    ,reln.Vendor_Account_Holder
    ,reln.Vendor_IBAN
	,reln.Vendor_BIC
    ,reln.Vendor_Bank_Account_Number
    ,reln.Vendor_Bank_Branch_Number
	,reln.Vendor_Bank_Origin
    ,reln.Posting_Date
    ,reln.Posting_Date_Changed
    ,reln.Due_Date
    ,reln.Last_Payment_Date
    ,reln.Entry_Cancelled
    ,reln.Jnl_Changed_By
    ,reln.Jnl_Changed_On
    --,reln.Blocked_Vendor
    ,reln.Review_Status
    ,reln.Created_By
    ,reln.Vendor_Number_Name
	,reln.Source_System
    ,reln.Rownumber
	,reln.[Year]
    ,reln.[Year-Month]
    ,reln.Mandant

FROM [ADECT].[RELN_PAYMENT] reln
UNION 
SELECT 
	bfsn.Payment_Number 
    ,bfsn.Posting_Description_1
    ,bfsn.Posting_Description_2
    ,bfsn.Posting_Description_3
    ,bfsn.Document_Number_external
    ,bfsn.Document_Number_internal
    --,bfsn.Contract_Number --> exclude from consideration, since there is no contract number for any (accounts payable) vendor
    ,bfsn.Gen_Jnl_Line_Number
    ,bfsn.Line_Number
    ,bfsn.ID_Vendor_Entry
    ,bfsn.Object_Number
    ,bfsn.Vendor_Number
    ,bfsn.[Name]
    ,bfsn.City
    ,bfsn.Country_Region_Code
    ,bfsn.Amount_Applied
    ,bfsn.Amount_Initial
    ,bfsn.Discount_Applied
    ,bfsn.Discount_Allowed
    ,bfsn.Discount_Rate
    ,bfsn.Discount_Possible
    --,bfsn.VAT_Rate
    --,bfsn.VAT_Amount
    ,bfsn.Payment_Method_Code
    ,bfsn.Customer_Bank_Branch_Number
    ,bfsn.Customer_Bank_Account_Number
    ,bfsn.Customer_IBAN
    ,bfsn.Vendor_Account_Holder
    ,bfsn.Vendor_IBAN
	,bfsn.Vendor_BIC
    ,bfsn.Vendor_Bank_Account_Number
    ,bfsn.Vendor_Bank_Branch_Number
	,bfsn.Vendor_Bank_Origin
    ,bfsn.Posting_Date
    ,bfsn.Posting_Date_Changed
    ,bfsn.Due_Date
    ,bfsn.Last_Payment_Date
    ,bfsn.Entry_Cancelled
    ,bfsn.Jnl_Changed_By
    ,bfsn.Jnl_Changed_On
    --,bfsn.Blocked_Vendor
    ,bfsn.Review_Status
    ,bfsn.Created_By
    ,bfsn.Vendor_Number_Name
	,bfsn.Source_System
    ,bfsn.Rownumber
	,bfsn.[Year]
    ,bfsn.[Year-Month]
    ,bfsn.Mandant

FROM [ADECT].[BFSN_PAYMENT] bfsn


--------------------------------------------------------------------------------------------------------
--Update Country_Region_Code spelling
UPDATE [ADECT].[TOTAL_PAYMENTS]
SET Country_Region_Code = 
	CASE Country_Region_Code 
	WHEN 'I' THEN 'IT'
	WHEN 'F' THEN 'FR'
	WHEN 'B' THEN 'BE'
	WHEN 'EE' THEN 'EST'
	WHEN 'BG' THEN 'BGR'
	WHEN 'PA' THEN 'PAN'
	WHEN 'FI' THEN 'FIN'
	WHEN 'LU' THEN 'LUX'
	WHEN 'UK' THEN 'GB'
	WHEN 'SI' THEN 'SVN'
	WHEN 'AE' THEN 'UAE'
	WHEN 'SG' THEN 'SGP'
	WHEN 'SE' THEN 'SWE'
	WHEN 'IE' THEN 'IRL'
	WHEN 'CA' THEN 'CAN'
	ELSE Country_Region_Code END
WHERE Country_Region_Code IN ('I', 'F', 'B', 'EE', 'BG', 'PA', 'FI', 'LU', 'UK', 'SI', 'AE', 'SG', 'SE', 'IE', 'CA')

-- Update Country_Region_Code based on City-Name
UPDATE [ADECT].[TOTAL_PAYMENTS]
SET Country_Region_Code = 
	CASE 
		WHEN City IN ('London', 'United Kingdom') THEN 'GB'
		WHEN City IN ('Beernem') THEN 'BE'
		WHEN City IN ('Dublin') THEN 'IRL'
		WHEN City IN ('Montreal, Quebec') THEN 'CAN'
		WHEN City IN ('Metzingen', 
						'Riedlingen',
						'Landshut',
						'Berlin',
						'Pfullingen',
						'Reutlingen',
						'Fellbach',
						'Philippsthal',
						'Hausen am Bach',
						'München',
						'Freiburg',
						'Bielefeld',
						'Emmering',
						'Schorndorf',
						'Künzing',
						'Martinsried',
						'Stuttgart',
						'Konstanz',
						'Bösenreutin',
						'Viersen',
						'Karlsbad',
						'Seevetal',
						'Taufkirchen',
						'Filderstadt',
						'Oberviechtach',
						'Pliezhausen') THEN 'DE'
		WHEN City IN ('Wien') THEN 'AT'
		WHEN City IN ('Alicante') THEN 'ES'
		WHEN City IN ('Rigas rajons') THEN 'LVA'
		ELSE Country_Region_Code
END

--Change spelling of specific City
UPDATE [ADECT].[TOTAL_PAYMENTS]
SET City = 
CASE 
	WHEN City IN ('Düsseldorg') THEN 'Düsseldorf'
	WHEN City IN ('Frankfurt', 'Frankfurt/Main') THEN 'Frankfurt am Main'
	WHEN City IN ('Copenhagen', 'Copenhagen K') THEN 'Kopenhagen'
	WHEN City IN ('Holzwickede', 'Dortmund-Holzwickede') THEN 'Dortmund'
	WHEN City IN ('München ', 'München-Flughafen') THEN 'München'
	WHEN City IN ('Erkrath ') THEN 'Erkrath'
	WHEN City IN ('Stuttgart-Degerloch', 'Stuttgart-Flughafen') THEN 'Stuttgart'
	WHEN City IN ('Kirchheim', 'Kirchheim unter Teck') THEN 'Kirchheim/Teck'
	WHEN City IN ('Walddorfhässlach') THEN 'Walddorfhäslach'
	WHEN City IN ('Mainz-Kastel') THEN 'Mainz'
	WHEN City IN ('Dubai, United Arab Emirates') THEN 'Dubai'
	WHEN City IN ('Aarhus N', 'ARHUS', 'Aarhus c') THEN 'Aarhus'
	WHEN City IN ('Ireland', 'Dublin D02X525, Ireland', 'Dublin 18 Irland') THEN 'Dublin'
	WHEN City IN ('SR Leiden ') THEN 'SR Leiden'
	WHEN City IN ('Taufkirchen/Pram') THEN 'Taufkirchen'
	WHEN City IN ('Paris - France', 'Paris – France', 'Paris 2') THEN 'Paris'
	WHEN City IN ('CK Amsterdam', 'GW Amsterdam', 'MS Halfweg (Amsterdam)', 'DJ Amsterdam') THEN 'Amsterdam'
	WHEN City IN ('Schwarzach') THEN 'Schwarzach am Main'
	WHEN City IN ('Feldkirchen-Westerham') THEN 'Feldkirchen'
	WHEN City IN ('Kirn / Nahe') THEN 'Kirn'
	WHEN City IN ('San Mauro Pascoli (FC)') THEN 'San Mauro Pascoli'
	WHEN City IN ('Planegg/Martinsried', 'Martinsried') THEN 'Planegg'
	WHEN City IN ('Garmisch-Partenkirchenu') THEN 'Garmisch-Partenkirchen'
	WHEN City IN ('Eningen', 'Eningen u. A.') THEN 'Eningen unter Achalm'
	WHEN City IN ('Rosenheim ') THEN 'Rosenheim'
	WHEN City IN ('Neuenstadt') THEN 'Neuenstadt am Kocher'
	WHEN City IN (' Empfingen') THEN 'Empfingen'
	WHEN City IN ('Leinfelder-Echterdingen') THEN 'Leinfelden-Echterdingen'
	WHEN City IN ('Helsinki, Finnland') THEN 'Helsinki'
	WHEN City IN ('Baden Baden') THEN 'Baden-Baden'
	WHEN City IN ('DD Weert') THEN 'Weert'
	WHEN City IN ('Kolding, Danmark') THEN 'Kolding'
	WHEN City IN ('Kusterdingen/Wankheim') THEN 'Kusterdingen-Wankheim'
	WHEN City IN ('Ditzingen-Schöckingen') THEN 'Ditzingen'
	WHEN City IN ('Herning, Denmark') THEN 'Herning'
	WHEN City IN ('Capalle, Firenze', 'Firenze', 'Scandicci Firenze') THEN 'Florenz'
	WHEN City IN ('HA Waalwijk', 'KG Waalwijk') THEN 'Waalwijk'
	WHEN City IN ('Milano (MI)', 'Milano', 'Milan') THEN 'Mailand'
	WHEN City IN ('HC Rotterdam') THEN 'Rotterdam'
	WHEN City IN ('Fidenze (Parma) Italy') THEN 'Fidenza'
	WHEN City IN ('Herford ') THEN 'Herford'
	WHEN City IN ('HC Rotterdam') THEN 'Rotterdam'
	WHEN City IN ('Fidenze (Parma) Italy') THEN 'Fidenza'
	WHEN City IN ('London SE1 3TY', 'London W1W 7PA', 'The Copperworks, London', 'Camden, London', 'London United Kingdom' ) THEN 'London'
	WHEN City IN ('Krefeld ') THEN 'Krefeld'
	WHEN City IN ('Martorell _Barcelona') THEN 'Barcelona'
	WHEN City IN ('Pforzheim-Mäuerach') THEN 'Pforzheim'
	WHEN City IN ('Zurich') THEN 'Zürich'
	WHEN City IN ('Asola (MN) Italien' ) THEN 'Asola'
	WHEN City IN ('Castiglion Fibocchi, Italia') THEN 'Castiglion Fibocchi'
	WHEN City IN ('Verona (VR)') THEN 'Verona'
	WHEN City IN ('Pforzheim-Mäuerach') THEN 'Pforzheim'
	WHEN City IN ('Bietigheim-Bissingen ') THEN 'Bietigheim-Bissingen'
	WHEN City IN ('Immenstadt') THEN 'Immenstadt i.Allgäu'
	WHEN City IN ('Metzingen Neuhausen') THEN 'Metzingen'
	WHEN City IN ('Leonberg-Eltingen') THEN 'Leonberg'

	
	ELSE City
END
END
GO
PRINT N'Altering Procedure [ADECT].[S_RELN_PAYMENT]...';


GO

ALTER PROCEDURE [ADECT].[S_RELN_PAYMENT] AS BEGIN

TRUNCATE TABLE [ADECT].[RELN_PAYMENT]

-- Payment Transaction, Payment Entry, Payment Line, Vendor & Vendor_ledger_entry
INSERT INTO [ADECT].[RELN_PAYMENT]
	(
	[Payment_Number]
      ,[Posting_Description_1]
      ,[Posting_Description_2]
      ,[Posting_Description_3]
      ,[Document_Number_external]
      ,[Document_Number_internal]
      --,[Contract_Number]
      ,[Gen_Jnl_Line_Number]
      ,[Line_Number]
      ,[ID_Vendor_Entry]
      ,[Object_Number]
      ,[Vendor_Number]
      ,[Name]
      ,[City]
      ,[Country_Region_Code]
      ,[Amount_Applied]
      ,[Amount_Initial]
      ,[Discount_Applied]
      ,[Discount_Allowed]
      ,[Discount_Rate]
      ,[Discount_Possible]
      --,[VAT_Rate]
      --,[VAT_Amount]
      ,[Payment_Method_Code]
      ,[Customer_Bank_Branch_Number]
      ,[Customer_Bank_Account_Number]
      ,[Customer_IBAN]
      ,[Vendor_Account_Holder]
      ,[Vendor_IBAN]
	  ,[Vendor_BIC]
      ,[Vendor_Bank_Account_Number]
      ,[Vendor_Bank_Branch_Number]
	  ,[Vendor_Bank_Origin]
      ,[Posting_Date]
      ,[Posting_Date_Changed]
      ,[Due_Date]
      ,[Last_Payment_Date]
      ,[Entry_Cancelled]
      ,[Jnl_Changed_By]
      ,[Jnl_Changed_On]
      --,[Blocked_Vendor]
      ,[Review_Status]
      ,[Created_By]
      ,[Vendor_Number_Name]
	  ,[Source_System]
      ,[Rownumber]
	  ,[Year]
      ,[Year-Month]
      ,[Mandant]
	)
SELECT
	pt.Case_Number AS Payment_Number,
	ISNULL(vle.Description_1, 'unknown') AS Posting_Description_1,
	ISNULL(vle.Description_2, 'unknown') AS Posting_Description_2,
	ISNULL(pl.Remittance_Inf, 'unknown') AS Posting_Description_3,
	
	ISNULL(pl.Remittance_Inf,'unknown') AS Document_Number_external, --need to extract number from text string
	ISNULL(pl.Document_Number,'unknown') AS Document_Number_internal,
	--ISNULL(pl.Contract_Number,'unknown') AS Contract_Number,

	ISNULL(pe.Serial_Number,0) AS Gen_Jnl_Line_Number,
	ISNULL(pl.Gen_Jnl_Line_Number, 0) AS Line_Number,
	ISNULL(pl.Serial_Number_Vendor_Entry,0) AS ID_Vendor_Entry, 
	ISNULL(pe.Object_Number,'unknown') AS Object_Number,

	ISNULL(pl.Vendor_Number_Customer_Number,'unknown') AS Vendor_Number,
	ISNULL(ven.Vendor_Name, 'unknown') AS Name,
	ISNULL(ven.City, 'unknown') AS City,
	ISNULL(ven.Country_Region_Code, 'unknown') AS Country_Region_Code,

	ISNULL(pl.Amount,0) AS Amount_Applied,
	ISNULL(pl.Original_Amount,0) AS Amount_Initial,
	ISNULL(pl.Discount,0) AS Discount_Applied,
	0 AS Discount_Allowed,
	0 AS Discount_Rate,
	0 AS Discount_Possible,
	--ISNULL(pl.VAT_Rate,0) AS VAT_Rate,
	--ISNULL(pl.VAT_Amount,0) AS VAT_Amount,
	ISNULL(pe.Payment_Method_Code, 'unkown') AS Payment_Method_Code,

	ISNULL(pe.Customer_Bank_Branch_Number,'unknown') AS Customer_Bank_Branch_Number,
	ISNULL(pe.Customer_Bank_Account_Number,'unknown') AS Customer_Bank_Account_Number,
	ISNULL(pe.Customer_IBAN,'unknown') AS Customer_IBAN,

	ISNULL(pl.Recipient_Account_Holder,'unknown') AS Vendor_Account_Holder,
	ISNULL(pl.Recipient_IBAN,'unknown') AS Vendor_IBAN,
	ISNULL(pl.Recipient_BIC_Code,'unknown') AS Vendor_BIC,
	ISNULL(pl.Recipient_Bank_Account_Number,'unknown') AS Vendor_Bank_Account_Number,
	ISNULL(pl.Recipient_Bank_Branch_Number,'unknown') AS Vendor_Bank_Branch_Number,
	ISNULL(LEFT(pl.Recipient_IBAN,2),'unknown') AS Vendor_Bank_Origin,

	pt.Posting_Date,
	pt.Posting_Date_Changed,
	pt.Execute_On AS Due_Date,
	ISNULL(pl.Last_Payment_Date, '1900-01-01') AS Last_Payment_Date,

	ISNULL(pt.Cancelled, 999) AS Entry_Cancelled,
	ISNULL(pl.JournLine_Manually_Changed_By, 'unknown') AS Jnl_Changed_By,
	ISNULL(pl.JournLine_Manually_Changed_On, '1900-01-01') AS Jnl_Changed_On,
	--ISNULL(ven.Blocked, 999) AS Blocked_Vendor,
	'Booked' AS Review_Status,
	pt.[User] AS Created_By,

	ISNULL(ven.Vendor_Number + ' ' + ven.Vendor_Name,'') AS Vendor_Number_Name,
	'RELN' AS Source_System,
	ROW_NUMBER() OVER (PARTITION BY pl.Vendor_Number_Customer_Number ORDER BY pl.Vendor_Number_Customer_Number) AS Rownumber,
	YEAR(pt.Posting_Date) AS [Year],
	CONVERT(NVARCHAR(20), ISNULL(pt.Posting_Date,'1900-01-01'), 126) AS [Year-Month],
	CASE	WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('10%') THEN '01_Holy AG'	--Object_Number - start with 10...
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('05%') THEN '02_Immobilien_Sonstige' 
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('20%') THEN '02_Immobilien_Sonstige' 
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('30%') THEN '02_Immobilien_Sonstige' 
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('6%') THEN '02_Immobilien_Sonstige' 
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('7%') THEN '02_Immobilien_Sonstige' 
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('11%') THEN '03_OUTLETCITY_Online'
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('13%') THEN '04_Gastro'
			WHEN ISNULL(pe.Object_Number,'unknown') LIKE ('01%') THEN '05_Holy_Verwaltungs_GmbH'
	ELSE 'unknown' END AS Mandant
	FROM [HUB].[PAPO].[RELN_RE_Payment_Transaction] pt --981
		LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Entry] pe ON pt.Case_Number = pe.Payment_Transaction_Number 
		LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Line] pl ON pl.Serial_Number_Payment_Entry = pe.Serial_Number AND pl.Payment_Transaction_Number = pt.Case_Number
		LEFT JOIN [ADECT].[RELN_BFSN_Vendor] ven ON ven.Source_System = 'RELN' AND ven.Vendor_Number = pl.Vendor_Number_Customer_Number
		LEFT JOIN [HUB].[PAPO].[RELN_Vendor_Ledger_Entry] vle ON pl.Serial_Number_Vendor_Entry = vle.[Entry Number] AND vle.Vendor_Number = pl.Vendor_Number_Customer_Number AND vle.Object_Number = pe.Object_Number AND vle.Document_Number = pl.Document_Number 
WHERE pl.Vendor_Number_Customer_Number NOT LIKE ('1%') AND pt.Posting_Date >= '2016-01-01' --Excluding all Vendor_Numbers that start with 1 (=Debitors) and invoices that are older than 2016

/*
UPDATE [ADECT].[RELN_PAYMENT]
SET Document_Number_external = LEFT(Document_Number_external, LEN (Document_Number_external) - 10) 

UPDATE [ADECT].[RELN_PAYMENT]
SET Document_Number_external = RIGHT(Document_Number_external, LEN (Document_Number_external) - 4)
*/
END

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Check how many observations are in the respective columns (after JOIN)
SELECT
	COUNT(*)
FROM [HUB].[PAPO].[RELN_RE_Payment_Entry] pe -- 5174
		LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Transaction] pt ON pt.Case_Number = pe.Payment_Transaction_Number --5174

SELECT
	COUNT(*)
FROM [HUB].[PAPO].[RELN_RE_Payment_Line] pl --21528
	LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Entry] pe ON pl.Serial_Number_Payment_Entry = pe.Serial_Number --21528
	LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Transaction] pt ON pt.Case_Number = pe.Payment_Transaction_Number AND pl.Payment_Transaction_Number = pt.Case_Number --21528
	LEFT JOIN [ADECT].[RELN_BFSN_Vendor] ven ON ven.Source_System = 'RELN' AND ven.Vendor_Number = pl.Vendor_Number_Customer_Number --21528
	LEFT JOIN [HUB].[PAPO].[RELN_Vendor_Ledger_Entry] vle ON vle.Document_Number = pl.Document_Number AND vle.Vendor_Number = ven.Vendor_Number AND vle.Object_Number = pe.Object_Number AND pl.Serial_Number_Vendor_Entry = vle.[Entry Number] --21528
WHERE pl.Vendor_Number_Customer_Number NOT LIKE ('1%') --Excluding all Vendor_Numbers that start with 1 (=Debitors)	
		
SELECT
COUNT(*)
FROM [HUB].[PAPO].[RELN_RE_Payment_Transaction] pt -- 1086
		LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Entry] pe ON pe.Payment_Transaction_Number = pt.Case_Number --5243


-- Check number of obs. that are in Entry but not in Transaction
SELECT *
FROM [HUB].[PAPO].[RELN_RE_Payment_Entry]
WHERE Payment_Transaction_Number NOT IN (SELECT Case_Number FROM [HUB].[PAPO].[RELN_RE_Payment_Transaction] ) --2

--Check number of obs. that are in Transaction but not in Entry
--THere is not Entry for those 71 obs. since they are cancelled (Cancelled = 1)
SELECT *
FROM [HUB].[PAPO].[RELN_RE_Payment_Transaction]
WHERE Case_Number NOT IN (SELECT Payment_Transaction_Number FROM [HUB].[PAPO].[RELN_RE_Payment_Entry]) --71

----------------------------------------------------------------------------------------------------------------
--Check how many entries there are in vle to merge
SELECT *
FROM [HUB].[PAPO].[RELN_Vendor_Ledger_Entry]
WHERE Document_Number IN (SELECT Document_Number FROM [HUB].[PAPO].[RELN_RE_Payment_Line]) --2.725

SELECT *
FROM [HUB].[PAPO].[RELN_Vendor_Ledger_Entry]
WHERE [Entry Number] IN (SELECT Serial_Number_Vendor_Entry FROM [HUB].[PAPO].[RELN_RE_Payment_Line]) --2.706

SELECT *
FROM [HUB].[PAPO].[RELN_Vendor_Ledger_Entry]
WHERE Vendor_Number IN (SELECT Vendor_Number_Customer_Number FROM [HUB].[PAPO].[RELN_RE_Payment_Line]) --35.075
----------------------------------------------------------------------------------------------------------------
--Schauen ob Debitoren ausgeklammert werden
SELECT
COUNT (*)
FROM [HUB].[PAPO].[RELN_RE_Payment_Transaction] pt --981
		LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Entry] pe ON pt.Case_Number = pe.Payment_Transaction_Number 
		LEFT JOIN [HUB].[PAPO].[RELN_RE_Payment_Line] pl ON pl.Serial_Number_Payment_Entry = pe.Serial_Number AND pl.Payment_Transaction_Number = pt.Case_Number
		LEFT JOIN [ADECT].[RELN_BFSN_Vendor] ven ON ven.Source_System = 'RELN' AND ven.Vendor_Number = pl.Vendor_Number_Customer_Number
		LEFT JOIN [HUB].[PAPO].[RELN_Vendor_Ledger_Entry] vle ON pl.Serial_Number_Vendor_Entry = vle.[Entry Number] AND vle.Vendor_Number = pl.Vendor_Number_Customer_Number AND vle.Object_Number = pe.Object_Number AND vle.Document_Number = pl.Document_Number
WHERE pl.Vendor_Number_Customer_Number NOT LIKE ('1%') --12.970
--WHERE pl.Vendor_Number_Customer_Number  LIKE ('1%') --7.176
--Difference of the two WHERE-clauses are the observations (68, see also SELECT above) with Serial Number = 0
GO
PRINT N'Altering Procedure [ADECT].[S_Create_Tables]...';


GO

ALTER PROCEDURE [ADECT].[S_Create_Tables] AS BEGIN

---------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE [ADECT].[RELN_BFSN_Vendor](
	[Vendor_Number] [nvarchar](20) NOT NULL,
	[Vendor_Name] [nvarchar](50) NOT NULL,
	[Address] [nvarchar](50) NOT NULL,
	[City] [nvarchar](30) NOT NULL,
	[Country_Region_Code] [nvarchar](10) NOT NULL,
	[Blocked] [int] NOT NULL,
	[VAT_Registration_Number] [nvarchar](20) NOT NULL,
	[Source_System] [nvarchar] (10) NOT NULL,
	) ON [PRIMARY]

---------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE [ADECT].[Vendor_Bank_Account](
	[Vendor_Number] [nvarchar](20) NOT NULL,
	[IBAN] [nvarchar](50) NOT NULL,
	[Bank_Branch_Number] [nvarchar](20) NOT NULL,
	[Bank_Account_Number] [nvarchar](34) NOT NULL,
	[Source_System] [nvarchar] (10) NOT NULL,
	) ON [PRIMARY]

---------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE [ADECT].[MERGED_VENDOR_BANK]
	(
	[Vendor_Number] [nvarchar](20) NOT NULL,
	[Vendor_Name] [nvarchar](50) NOT NULL,
	[Address] [nvarchar](50) NOT NULL,
	[City] [nvarchar](30) NOT NULL,
	[Country_Region_Code] [nvarchar](10) NOT NULL,
	[Blocked] [int] NOT NULL,
	[VAT_Registration_Number] [nvarchar](20) NOT NULL,
	[Source_System] [nvarchar] (10) NOT NULL,
	[IBAN] [nvarchar](50) NOT NULL,
	[Bank_Branch_Number] [nvarchar](20) NOT NULL,
	[Bank_Account_Number] [nvarchar](34) NOT NULL,
	[RowNumber] INT NOT NULL,
	) ON [PRIMARY]

---------------------------------------------------------------------------------------------------------------------------------
/*CREATE TABLE [ADECT].[RELN_PAYMENT_PROPOSAL](
	[Payment_Number] [nvarchar](20) NOT NULL,
	[Created_By] [nvarchar](50) NOT NULL,
	[Posting_Date] [datetime] NOT NULL,
	--[Posting_Date_Changed] [int] NOT NULL,
	[Posting_Description_1] [nvarchar](255) NOT NULL,
	[Posting_Description_2] [nvarchar](255) NOT NULL,
	[First_Due_Date] [datetime] NOT NULL,
	[Last_Due_Date] [datetime] NOT NULL,
	--[Last_Payment_Date] [datetime] NOT NULL,
	[Serial_Number] [int] NOT NULL,
	[Gen_Jnl_Line_Number] [int] NOT NULL,
	[Serial_Number_Debt_CredEntry] [int] NOT NULL,
	[Serial_Number_Paym_Entry] [int] NOT NULL,
	--[Serial_Number_Vendor_Number] [int] NOT NULL,
	[Journal_Template_Name] [nvarchar](10) NOT NULL,
	[Object_Number] [nvarchar](20) NOT NULL,
	[Payment_Method_Code] [nvarchar](50) NOT NULL,
	[Number_Customer_Vendor] [nvarchar](20) NOT NULL,
	[Document_Number] [nvarchar](20) NOT NULL,
	--[Contract_Number] [nvarchar](20) NOT NULL,
	--[Remittance_Inf] [nvarchar](20) NOT NULL,
	[Amount] [decimal](38, 20) NOT NULL,
	[Original_Amount] [decimal](38, 20) NOT NULL,
	[Discount] [decimal](38, 20) NOT NULL,
	[VAT_Rate] [decimal](38, 20) NOT NULL,
	[VAT_Amount] [decimal](38, 20) NOT NULL,
	[Customer_Bank_Branch_Number] [nvarchar](30) NOT NULL,
	[Customer_Bank_Account_Number] [nvarchar](30) NOT NULL,
	[Customer_IBAN] [nvarchar](50) NOT NULL,
	--[SEPA_Mandate_ID] [nvarchar](20) NOT NULL,
	[Recipient_Account_Holder] [nvarchar](50) NOT NULL,
	[Recipient_IBAN] [nvarchar](50) NOT NULL,
	[Recipient_Bank_Account_Number] [nvarchar](50) NOT NULL,
	[Recipient_Bank_Branch_Number] [nvarchar](50) NOT NULL,
	--[JournLine_Manually_Changed_By] [nvarchar](50) NOT NULL,
    --[JournLine_Manually_Changed_On] [datetime] NOT NULL,
	--[Cancelled] [int] NOT NULL,
	[Review_Status] [nvarchar](20) NOT NULL,
	[Vendor_Number_Name] [nvarchar](100) NOT NULL,
	[Blocked_Vendor] [int] NOT NULL,
	[Source_System] [nvarchar](4) NOT NULL,
	[Rownumber] [int] NOT NULL,
	[Year] [int] NOT NULL,
	[Year-Month] [nvarchar](10) NOT NULL,
	[Mandant] [nvarchar](50) NOT NULL,
	) ON [PRIMARY]
*/
/*
ALTER TABLE [ADECT].[RELN_PAYMENT_PROPOSAL] ADD  CONSTRAINT [DF_RELN_PAYMENT_PROP_Review_Status]  DEFAULT ('') FOR [Review_Status]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT_PROPOSAL] ADD  CONSTRAINT [DF_RELN_PAYMENT_PROP_Vendor_Number_Name]  DEFAULT ('') FOR [Vendor_Number_Name]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT_PROPOSAL] ADD  CONSTRAINT [DF_RELN_PAYMENT_PROP_Source_System]  DEFAULT ('unknown') FOR [Source_System]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT_PROPOSAL] ADD  CONSTRAINT [DF_RELN_PAYMENT_PROP_Year]  DEFAULT ((1900)) FOR [Year]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT_PROPOSAL] ADD  CONSTRAINT [DF_RELN_PAYMENT_PROP_Year-Month]  DEFAULT ('1900-01') FOR [Year-Month]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT_PROPOSAL] ADD  CONSTRAINT [DF_RELN_PAYMENT_PROP_Mandant]  DEFAULT ('unknown') FOR [Mandant]
GO
*/


---------------------------------------------------------------------------------------------------------------------------------
--DROP TABLE [ADECT].[RELN_PAYMENT]

CREATE TABLE [ADECT].[RELN_PAYMENT](
	[Payment_Number] [nvarchar](100) NOT NULL,
	[Posting_Description_1] [nvarchar](200) NOT NULL,
	[Posting_Description_2] [nvarchar](200) NOT NULL,
	[Posting_Description_3] [nvarchar](200) NOT NULL,
	
	[Document_Number_external] [nvarchar](100) NOT NULL,
	[Document_Number_internal] [nvarchar](20) NOT NULL,
	--[Contract_Number] [nvarchar](20) NOT NULL,
	
	[Gen_Jnl_Line_Number] [int] NOT NULL,
	[Line_Number] [int] NOT NULL,
	[ID_Vendor_Entry] [int] NOT NULL,
	[Object_Number] [nvarchar](20) NOT NULL,
	
	[Vendor_Number] [nvarchar](20) NOT NULL,
	[Name] [nvarchar](100) NOT NULL,
	[City] [nvarchar](50) NOT NULL,
	[Country_Region_Code] [nvarchar](20) NOT NULL,

	[Amount_Applied] [decimal](38, 20) NOT NULL,
	[Amount_Initial] [decimal](38, 20) NOT NULL,
	[Discount_Applied] [decimal](38, 20) NOT NULL,
	[Discount_Allowed][int] NOT NULL,
	[Discount_Rate] [decimal](38, 20) NOT NULL,
	[Discount_Possible] [decimal](38, 20) NOT NULL,
	--[VAT_Rate] [decimal](38, 20) NOT NULL,
	--[VAT_Amount] [decimal](38, 20) NOT NULL,
	[Payment_Method_Code] [nvarchar](10) NOT NULL,

	[Customer_Bank_Branch_Number] [nvarchar](100) NOT NULL,
	[Customer_Bank_Account_Number] [nvarchar](100) NOT NULL,
	[Customer_IBAN] [nvarchar](100) NOT NULL,
	
	[Vendor_Account_Holder] [nvarchar](100) NOT NULL,
	[Vendor_IBAN] [nvarchar](100) NOT NULL,
	[Vendor_BIC] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Account_Number] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Branch_Number] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Origin] [nvarchar](10) NOT NULL,
	
	[Posting_Date] [datetime] NOT NULL,
	[Posting_Date_Changed] [int] NOT NULL,
	[Due_Date] [datetime] NOT NULL,
	[Last_Payment_Date] [datetime] NOT NULL,
			
	[Entry_Cancelled] [int] NOT NULL,
	[Jnl_Changed_By] [nvarchar](100) NOT NULL,
	[Jnl_Changed_On] [datetime] NOT NULL,
	--[Blocked_Vendor] [int] NOT NULL,
	[Review_Status] [nvarchar](100) NOT NULL,
	[Created_By] [nvarchar](100) NOT NULL,
	
	[Vendor_Number_Name] [nvarchar](100) NOT NULL,
	[Source_System] [nvarchar](100) NOT NULL,
	[Rownumber] [int] NOT NULL,
	[Year] [int] NOT NULL,
	[Year-Month] [nvarchar](20) NOT NULL,
	[Mandant] [nvarchar](100) NOT NULL
	) ON [PRIMARY]

/*
ALTER TABLE [ADECT].[RELN_PAYMENT] ADD  CONSTRAINT [DF_RELN_PAYMENT_Review_Status]  DEFAULT ('') FOR [Review_Status]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT] ADD  CONSTRAINT [DF_RELN_PAYMENT_Vendor_Number_Name]  DEFAULT ('') FOR [Vendor_Number_Name]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT] ADD  CONSTRAINT [DF_RELN_PAYMENT_Source_System]  DEFAULT ('unknown') FOR [Source_System]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT] ADD  CONSTRAINT [DF_RELN_PAYMENT_Year]  DEFAULT ((1900)) FOR [Year]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT] ADD  CONSTRAINT [DF_RELN_PAYMENT_Year-Month]  DEFAULT ('1900-01') FOR [Year-Month]
GO

ALTER TABLE [ADECT].[RELN_PAYMENT] ADD  CONSTRAINT [DF_RELN_PAYMENT_Mandant]  DEFAULT ('unknown') FOR [Mandant]
GO
*/

---------------------------------------------------------------------------------------------------------------------------------
--DROP TABLE [ADECT].[BFSN_PAYMENT]

CREATE TABLE [ADECT].[BFSN_PAYMENT](
	[Payment_Number] [nvarchar](100) NOT NULL,
	[Posting_Description_1] [nvarchar](200) NOT NULL,
	[Posting_Description_2] [nvarchar](200) NOT NULL,
	[Posting_Description_3] [nvarchar](200) NOT NULL,
	
	[Document_Number_external] [nvarchar](100) NOT NULL,
	[Document_Number_internal] [nvarchar](20) NOT NULL,
	--[Contract_Number] [nvarchar](20) NOT NULL,
	
	[Gen_Jnl_Line_Number] [int] NOT NULL,
	[Line_Number] [int] NOT NULL,
	[ID_Vendor_Entry] [int] NOT NULL,
	[Object_Number] [nvarchar](20) NOT NULL,
	
	[Vendor_Number] [nvarchar](20) NOT NULL,
	[Name] [nvarchar](100) NOT NULL,
	[City] [nvarchar](50) NOT NULL,
	[Country_Region_Code] [nvarchar](20) NOT NULL,

	[Amount_Applied] [decimal](38, 20) NOT NULL,
	[Amount_Initial] [decimal](38, 20) NOT NULL,
	[Discount_Applied] [decimal](38, 20) NOT NULL,
	[Discount_Allowed][int] NOT NULL,
	[Discount_Rate] [decimal](38, 20) NOT NULL,
	[Discount_Possible] [decimal](38, 20) NOT NULL,
	--[VAT_Rate] [decimal](38, 20) NOT NULL,
	--[VAT_Amount] [decimal](38, 20) NOT NULL,
	[Payment_Method_Code] [nvarchar](10) NOT NULL,
	
	[Customer_Bank_Branch_Number] [nvarchar](100) NOT NULL,
	[Customer_Bank_Account_Number] [nvarchar](100) NOT NULL,
	[Customer_IBAN] [nvarchar](100) NOT NULL,
	
	[Vendor_Account_Holder] [nvarchar](100) NOT NULL,
	[Vendor_IBAN] [nvarchar](100) NOT NULL,
	[Vendor_BIC] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Account_Number] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Branch_Number] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Origin] [nvarchar](10) NOT NULL,
	
	[Posting_Date] [datetime] NOT NULL,
	[Posting_Date_Changed] [int] NOT NULL,
	[Due_Date] [datetime] NOT NULL,
	[Last_Payment_Date] [datetime] NOT NULL,
			
	[Entry_Cancelled] [int] NOT NULL,
	[Jnl_Changed_By] [nvarchar](100) NOT NULL,
	[Jnl_Changed_On] [datetime] NOT NULL,
	--[Blocked_Vendor] [int] NOT NULL,
	[Review_Status] [nvarchar](100) NOT NULL,
	[Created_By] [nvarchar](100) NOT NULL,
	
	[Vendor_Number_Name] [nvarchar](100) NOT NULL,
	[Source_System] [nvarchar](100) NOT NULL,
	[Rownumber] [int] NOT NULL,
	[Year] [int] NOT NULL,
	[Year-Month] [nvarchar](20) NOT NULL,
	[Mandant] [nvarchar](100) NOT NULL
	) ON [PRIMARY]

/*
ALTER TABLE [ADECT].[BFSN_PAYMENT] ADD  CONSTRAINT [DF_BFSN_PAYMENT_Review_Status]  DEFAULT ('') FOR [Review_Status]
GO

ALTER TABLE [ADECT].[BFSN_PAYMENT] ADD  CONSTRAINT [DF_BFSN_PAYMENT_Vendor_Number_Name]  DEFAULT ('') FOR [Vendor_Number_Name]
GO

ALTER TABLE [ADECT].[BFSN_PAYMENT] ADD  CONSTRAINT [DF_BFSN_PAYMENT_Source_System]  DEFAULT ('unknown') FOR [Source_System]
GO

ALTER TABLE [ADECT].[BFSN_PAYMENT] ADD  CONSTRAINT [DF_BFSN_PAYMENT_Year]  DEFAULT ((1900)) FOR [Year]
GO

ALTER TABLE [ADECT].[BFSN_PAYMENT] ADD  CONSTRAINT [DF_BFSN_PAYMENT_Year-Month]  DEFAULT ('1900-01') FOR [Year-Month]
GO

ALTER TABLE [ADECT].[BFSN_PAYMENT] ADD  CONSTRAINT [DF_BFSN_PAYMENT_Mandant]  DEFAULT ('unknown') FOR [Mandant]
GO
*/

---------------------------------------------------------------------------------------------------------------------------------

--DROP TABLE [ADECT].[TOTAL_PAYMENTS]

CREATE TABLE [ADECT].[TOTAL_PAYMENTS](
	[Payment_Number] [nvarchar](100) NOT NULL,
	[Posting_Description_1] [nvarchar](200) NOT NULL,
	[Posting_Description_2] [nvarchar](200) NOT NULL,
	[Posting_Description_3] [nvarchar](200) NOT NULL,
	
	[Document_Number_external] [nvarchar](100) NOT NULL,
	[Document_Number_internal] [nvarchar](20) NOT NULL,
	--[Contract_Number] [nvarchar](20) NOT NULL, --> exclude from consideration, since there is no contract number for any (accounts payable) vendor
	
	[Gen_Jnl_Line_Number] [int] NOT NULL,
	[Line_Number] [int] NOT NULL,
	[ID_Vendor_Entry] [int] NOT NULL,
	[Object_Number] [nvarchar](20) NOT NULL,
	
	[Vendor_Number] [nvarchar](20) NOT NULL,
	[Name] [nvarchar](100) NOT NULL,
	[City] [nvarchar](50) NOT NULL,
	[Country_Region_Code] [nvarchar](20) NOT NULL,

	[Amount_Applied] [decimal](38, 20) NOT NULL,
	[Amount_Initial] [decimal](38, 20) NOT NULL,
	[Discount_Applied] [decimal](38, 20) NOT NULL,
	[Discount_Allowed][int] NOT NULL,
	[Discount_Rate] [decimal](38, 20) NOT NULL,
	[Discount_Possible] [decimal](38, 20) NOT NULL,
	--[VAT_Rate] [decimal](38, 20) NOT NULL,
	--[VAT_Amount] [decimal](38, 20) NOT NULL,
	[Payment_Method_Code] [nvarchar](10) NOT NULL,

	[Customer_Bank_Branch_Number] [nvarchar](100) NOT NULL,
	[Customer_Bank_Account_Number] [nvarchar](100) NOT NULL,
	[Customer_IBAN] [nvarchar](100) NOT NULL,
	
	[Vendor_Account_Holder] [nvarchar](100) NOT NULL,
	[Vendor_IBAN] [nvarchar](100) NOT NULL,
	[Vendor_BIC] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Account_Number] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Branch_Number] [nvarchar](100) NOT NULL,
	[Vendor_Bank_Origin] [nvarchar](10) NOT NULL,
	
	[Posting_Date] [datetime] NOT NULL,
	[Posting_Date_Changed] [int] NOT NULL,
	[Due_Date] [datetime] NOT NULL,
	[Last_Payment_Date] [datetime] NOT NULL,
			
	[Entry_Cancelled] [int] NOT NULL,
	[Jnl_Changed_By] [nvarchar](100) NOT NULL,
	[Jnl_Changed_On] [datetime] NOT NULL,
	--[Blocked_Vendor] [int] NOT NULL,
	[Review_Status] [nvarchar](100) NOT NULL,
	[Created_By] [nvarchar](100) NOT NULL,
	
	[Vendor_Number_Name] [nvarchar](100) NOT NULL,
	[Source_System] [nvarchar](100) NOT NULL,
	[Rownumber] [int] NOT NULL,
	[Year] [int] NOT NULL,
	[Year-Month] [nvarchar](20) NOT NULL,
	[Mandant] [nvarchar](100) NOT NULL
	) ON [PRIMARY]

END
GO
/* Ente permanent Scripts below */

/* Enter SQL Code for Sprint Release below*/
/* Sprint 75 */



/*
/* Sprint 74 */
/* Sprint 73 */
/* Sprint 72 */
/* Sprint 71 */
/* Sprint 69 & 70 */
/* Sprint 68 */
/* Sprint 67 */
/* Sprint 66 */
/* Sprint 65 */
/* Sprint 64 */
/* Sprint 62 + 63 */
/* Sprint 61 */
/* Sprint 60 */
/* Sprint 59 */
/* Sprint 58 */
/* Sprint 57 */
/* Sprint 56 */
/* Sprint 55 */
/* Sprint 54 */
/* Sprint 53 */
/* Sprint 51 + 52 */
/* Sprint 50 */
/* Sprint 49 */
/* Sprint 48 */
/* Sprint 47 */
/* Sprint 46 */
/* Sprint 45 */
/* Sprint 44 */
/* Sprint 43 */
/* Sprint 42 */
/* Sprint 41 */
/* Sprint 40 */
/* Sprint 39 */
/* Sprint 38 */
/* Sprint 37*/
/* Sprint 36*/
/* Sprint 35*/
/* Sprint 34*/
/* Sprint 33*/
/* Sprint 32*/
/* Sprint 31*/
/* Sprint 30*/
/* Sprint 29*/
/* Sprint 28*/
*/
GO

GO
PRINT N'Update complete.';


GO
